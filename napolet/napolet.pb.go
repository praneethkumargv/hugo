// Code generated by protoc-gen-go. DO NOT EDIT.
// source: napolet.proto

package napolet

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Dummy struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dummy) Reset()         { *m = Dummy{} }
func (m *Dummy) String() string { return proto.CompactTextString(m) }
func (*Dummy) ProtoMessage()    {}
func (*Dummy) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d6dc1d0641a1c8f, []int{0}
}

func (m *Dummy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dummy.Unmarshal(m, b)
}
func (m *Dummy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dummy.Marshal(b, m, deterministic)
}
func (m *Dummy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dummy.Merge(m, src)
}
func (m *Dummy) XXX_Size() int {
	return xxx_messageInfo_Dummy.Size(m)
}
func (m *Dummy) XXX_DiscardUnknown() {
	xxx_messageInfo_Dummy.DiscardUnknown(m)
}

var xxx_messageInfo_Dummy proto.InternalMessageInfo

type CreateVMRequest struct {
	VMName               string   `protobuf:"bytes,1,opt,name=VMName,proto3" json:"VMName,omitempty"`
	Vcpus                uint32   `protobuf:"varint,2,opt,name=vcpus,proto3" json:"vcpus,omitempty"`
	Memory               uint32   `protobuf:"varint,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage              uint32   `protobuf:"varint,4,opt,name=storage,proto3" json:"storage,omitempty"`
	ImageName            string   `protobuf:"bytes,5,opt,name=ImageName,proto3" json:"ImageName,omitempty"`
	VMId                 string   `protobuf:"bytes,6,opt,name=VMId,proto3" json:"VMId,omitempty"`
	PMId                 string   `protobuf:"bytes,7,opt,name=PMId,proto3" json:"PMId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVMRequest) Reset()         { *m = CreateVMRequest{} }
func (m *CreateVMRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVMRequest) ProtoMessage()    {}
func (*CreateVMRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d6dc1d0641a1c8f, []int{1}
}

func (m *CreateVMRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVMRequest.Unmarshal(m, b)
}
func (m *CreateVMRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVMRequest.Marshal(b, m, deterministic)
}
func (m *CreateVMRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVMRequest.Merge(m, src)
}
func (m *CreateVMRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVMRequest.Size(m)
}
func (m *CreateVMRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVMRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVMRequest proto.InternalMessageInfo

func (m *CreateVMRequest) GetVMName() string {
	if m != nil {
		return m.VMName
	}
	return ""
}

func (m *CreateVMRequest) GetVcpus() uint32 {
	if m != nil {
		return m.Vcpus
	}
	return 0
}

func (m *CreateVMRequest) GetMemory() uint32 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *CreateVMRequest) GetStorage() uint32 {
	if m != nil {
		return m.Storage
	}
	return 0
}

func (m *CreateVMRequest) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *CreateVMRequest) GetVMId() string {
	if m != nil {
		return m.VMId
	}
	return ""
}

func (m *CreateVMRequest) GetPMId() string {
	if m != nil {
		return m.PMId
	}
	return ""
}

type CreateVMResponse struct {
	Accepted             bool     `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVMResponse) Reset()         { *m = CreateVMResponse{} }
func (m *CreateVMResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVMResponse) ProtoMessage()    {}
func (*CreateVMResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d6dc1d0641a1c8f, []int{2}
}

func (m *CreateVMResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVMResponse.Unmarshal(m, b)
}
func (m *CreateVMResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVMResponse.Marshal(b, m, deterministic)
}
func (m *CreateVMResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVMResponse.Merge(m, src)
}
func (m *CreateVMResponse) XXX_Size() int {
	return xxx_messageInfo_CreateVMResponse.Size(m)
}
func (m *CreateVMResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVMResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVMResponse proto.InternalMessageInfo

func (m *CreateVMResponse) GetAccepted() bool {
	if m != nil {
		return m.Accepted
	}
	return false
}

type DeleteVMRequest struct {
	VMId                 string   `protobuf:"bytes,1,opt,name=VMId,proto3" json:"VMId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVMRequest) Reset()         { *m = DeleteVMRequest{} }
func (m *DeleteVMRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVMRequest) ProtoMessage()    {}
func (*DeleteVMRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d6dc1d0641a1c8f, []int{3}
}

func (m *DeleteVMRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVMRequest.Unmarshal(m, b)
}
func (m *DeleteVMRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVMRequest.Marshal(b, m, deterministic)
}
func (m *DeleteVMRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVMRequest.Merge(m, src)
}
func (m *DeleteVMRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVMRequest.Size(m)
}
func (m *DeleteVMRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVMRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVMRequest proto.InternalMessageInfo

func (m *DeleteVMRequest) GetVMId() string {
	if m != nil {
		return m.VMId
	}
	return ""
}

type DeleteVMResponse struct {
	Accepted             bool     `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVMResponse) Reset()         { *m = DeleteVMResponse{} }
func (m *DeleteVMResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteVMResponse) ProtoMessage()    {}
func (*DeleteVMResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d6dc1d0641a1c8f, []int{4}
}

func (m *DeleteVMResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVMResponse.Unmarshal(m, b)
}
func (m *DeleteVMResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVMResponse.Marshal(b, m, deterministic)
}
func (m *DeleteVMResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVMResponse.Merge(m, src)
}
func (m *DeleteVMResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteVMResponse.Size(m)
}
func (m *DeleteVMResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVMResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVMResponse proto.InternalMessageInfo

func (m *DeleteVMResponse) GetAccepted() bool {
	if m != nil {
		return m.Accepted
	}
	return false
}

type VMStat struct {
	VMId                 string   `protobuf:"bytes,1,opt,name=VMId,proto3" json:"VMId,omitempty"`
	State                string   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	PredictedCpu         uint32   `protobuf:"varint,3,opt,name=PredictedCpu,proto3" json:"PredictedCpu,omitempty"`
	PredictedMemory      uint32   `protobuf:"varint,4,opt,name=PredictedMemory,proto3" json:"PredictedMemory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VMStat) Reset()         { *m = VMStat{} }
func (m *VMStat) String() string { return proto.CompactTextString(m) }
func (*VMStat) ProtoMessage()    {}
func (*VMStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d6dc1d0641a1c8f, []int{5}
}

func (m *VMStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMStat.Unmarshal(m, b)
}
func (m *VMStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMStat.Marshal(b, m, deterministic)
}
func (m *VMStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMStat.Merge(m, src)
}
func (m *VMStat) XXX_Size() int {
	return xxx_messageInfo_VMStat.Size(m)
}
func (m *VMStat) XXX_DiscardUnknown() {
	xxx_messageInfo_VMStat.DiscardUnknown(m)
}

var xxx_messageInfo_VMStat proto.InternalMessageInfo

func (m *VMStat) GetVMId() string {
	if m != nil {
		return m.VMId
	}
	return ""
}

func (m *VMStat) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *VMStat) GetPredictedCpu() uint32 {
	if m != nil {
		return m.PredictedCpu
	}
	return 0
}

func (m *VMStat) GetPredictedMemory() uint32 {
	if m != nil {
		return m.PredictedMemory
	}
	return 0
}

type PMStat struct {
	PMId                 string   `protobuf:"bytes,1,opt,name=PMId,proto3" json:"PMId,omitempty"`
	TotalMemory          uint32   `protobuf:"varint,2,opt,name=TotalMemory,proto3" json:"TotalMemory,omitempty"`
	TotalCpu             uint32   `protobuf:"varint,3,opt,name=TotalCpu,proto3" json:"TotalCpu,omitempty"`
	SlackCpu             uint32   `protobuf:"varint,4,opt,name=SlackCpu,proto3" json:"SlackCpu,omitempty"`
	SlackMemory          uint32   `protobuf:"varint,5,opt,name=SlackMemory,proto3" json:"SlackMemory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PMStat) Reset()         { *m = PMStat{} }
func (m *PMStat) String() string { return proto.CompactTextString(m) }
func (*PMStat) ProtoMessage()    {}
func (*PMStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d6dc1d0641a1c8f, []int{6}
}

func (m *PMStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PMStat.Unmarshal(m, b)
}
func (m *PMStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PMStat.Marshal(b, m, deterministic)
}
func (m *PMStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PMStat.Merge(m, src)
}
func (m *PMStat) XXX_Size() int {
	return xxx_messageInfo_PMStat.Size(m)
}
func (m *PMStat) XXX_DiscardUnknown() {
	xxx_messageInfo_PMStat.DiscardUnknown(m)
}

var xxx_messageInfo_PMStat proto.InternalMessageInfo

func (m *PMStat) GetPMId() string {
	if m != nil {
		return m.PMId
	}
	return ""
}

func (m *PMStat) GetTotalMemory() uint32 {
	if m != nil {
		return m.TotalMemory
	}
	return 0
}

func (m *PMStat) GetTotalCpu() uint32 {
	if m != nil {
		return m.TotalCpu
	}
	return 0
}

func (m *PMStat) GetSlackCpu() uint32 {
	if m != nil {
		return m.SlackCpu
	}
	return 0
}

func (m *PMStat) GetSlackMemory() uint32 {
	if m != nil {
		return m.SlackMemory
	}
	return 0
}

type Stat struct {
	PM                   *PMStat   `protobuf:"bytes,1,opt,name=PM,proto3" json:"PM,omitempty"`
	VMS                  []*VMStat `protobuf:"bytes,2,rep,name=VMS,proto3" json:"VMS,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Stat) Reset()         { *m = Stat{} }
func (m *Stat) String() string { return proto.CompactTextString(m) }
func (*Stat) ProtoMessage()    {}
func (*Stat) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d6dc1d0641a1c8f, []int{7}
}

func (m *Stat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stat.Unmarshal(m, b)
}
func (m *Stat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stat.Marshal(b, m, deterministic)
}
func (m *Stat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stat.Merge(m, src)
}
func (m *Stat) XXX_Size() int {
	return xxx_messageInfo_Stat.Size(m)
}
func (m *Stat) XXX_DiscardUnknown() {
	xxx_messageInfo_Stat.DiscardUnknown(m)
}

var xxx_messageInfo_Stat proto.InternalMessageInfo

func (m *Stat) GetPM() *PMStat {
	if m != nil {
		return m.PM
	}
	return nil
}

func (m *Stat) GetVMS() []*VMStat {
	if m != nil {
		return m.VMS
	}
	return nil
}

func init() {
	proto.RegisterType((*Dummy)(nil), "Dummy")
	proto.RegisterType((*CreateVMRequest)(nil), "CreateVMRequest")
	proto.RegisterType((*CreateVMResponse)(nil), "CreateVMResponse")
	proto.RegisterType((*DeleteVMRequest)(nil), "DeleteVMRequest")
	proto.RegisterType((*DeleteVMResponse)(nil), "DeleteVMResponse")
	proto.RegisterType((*VMStat)(nil), "VMStat")
	proto.RegisterType((*PMStat)(nil), "PMStat")
	proto.RegisterType((*Stat)(nil), "Stat")
}

func init() { proto.RegisterFile("napolet.proto", fileDescriptor_6d6dc1d0641a1c8f) }

var fileDescriptor_6d6dc1d0641a1c8f = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x8b, 0xd4, 0x40,
	0x10, 0x9d, 0x9e, 0x99, 0x24, 0x33, 0xb5, 0x2e, 0x33, 0xdb, 0x88, 0xc6, 0xe0, 0x61, 0x68, 0x10,
	0xe6, 0xd4, 0xe0, 0x7a, 0xf3, 0xba, 0x0b, 0xb2, 0x87, 0x48, 0xc8, 0x48, 0xee, 0x6d, 0x52, 0x0c,
	0x8b, 0xc9, 0x24, 0x26, 0x1d, 0x61, 0x6f, 0x1e, 0xfd, 0x09, 0xfe, 0x13, 0xff, 0x9e, 0x74, 0x75,
	0xbe, 0x0c, 0x1e, 0xf6, 0x56, 0xef, 0x55, 0xf2, 0xea, 0xf5, 0xab, 0x6e, 0xb8, 0xbe, 0xa8, 0xaa,
	0xcc, 0x51, 0xcb, 0xaa, 0x2e, 0x75, 0x29, 0x3c, 0x70, 0xee, 0xdb, 0xa2, 0x78, 0x12, 0x7f, 0x18,
	0xec, 0xee, 0x6a, 0x54, 0x1a, 0x93, 0x30, 0xc6, 0xef, 0x2d, 0x36, 0x9a, 0xbf, 0x02, 0x37, 0x09,
	0x3f, 0xab, 0x02, 0x7d, 0x76, 0x60, 0xc7, 0x6d, 0xdc, 0x21, 0xfe, 0x12, 0x9c, 0x1f, 0x69, 0xd5,
	0x36, 0xfe, 0xf2, 0xc0, 0x8e, 0xd7, 0xb1, 0x05, 0xe6, 0xeb, 0x02, 0x8b, 0xb2, 0x7e, 0xf2, 0x57,
	0x44, 0x77, 0x88, 0xfb, 0xe0, 0x35, 0xba, 0xac, 0xd5, 0x19, 0xfd, 0x35, 0x35, 0x7a, 0xc8, 0xdf,
	0xc2, 0xf6, 0xa1, 0x50, 0x67, 0xa4, 0x11, 0x0e, 0x8d, 0x18, 0x09, 0xce, 0x61, 0x9d, 0x84, 0x0f,
	0x99, 0xef, 0x52, 0x83, 0x6a, 0xc3, 0x45, 0x86, 0xf3, 0x2c, 0x67, 0x6a, 0x21, 0x61, 0x3f, 0x1a,
	0x6f, 0xaa, 0xf2, 0xd2, 0x20, 0x0f, 0x60, 0xa3, 0xd2, 0x14, 0x2b, 0x8d, 0x19, 0x79, 0xdf, 0xc4,
	0x03, 0x16, 0xef, 0x60, 0x77, 0x8f, 0x39, 0x4e, 0x0f, 0xda, 0x8f, 0x62, 0xe3, 0x28, 0x23, 0x3b,
	0x7e, 0xf6, 0x0c, 0xd9, 0x9f, 0xcc, 0xa4, 0x75, 0xd2, 0xea, 0xbf, 0x72, 0x26, 0xb3, 0x46, 0x2b,
	0x8d, 0x94, 0xd9, 0x36, 0xb6, 0x80, 0x0b, 0x78, 0x11, 0xd5, 0x98, 0x3d, 0xa6, 0x1a, 0xb3, 0xbb,
	0xaa, 0xed, 0x92, 0xfb, 0x87, 0xe3, 0x47, 0xd8, 0x0d, 0x38, 0xb4, 0x01, 0xdb, 0x1c, 0xe7, 0xb4,
	0xf8, 0xcd, 0xc0, 0x8d, 0x06, 0x0b, 0xd1, 0xc4, 0x82, 0xa9, 0xf9, 0x01, 0xae, 0xbe, 0x94, 0x5a,
	0xe5, 0x9d, 0x88, 0x5d, 0xde, 0x94, 0x32, 0xe7, 0x23, 0x38, 0x5a, 0x19, 0xb0, 0xe9, 0x9d, 0x72,
	0x95, 0x7e, 0x33, 0x3d, 0x3b, 0x7f, 0xc0, 0x46, 0x99, 0xea, 0x4e, 0xd9, 0xb1, 0xca, 0x13, 0x4a,
	0x7c, 0x84, 0x35, 0xf9, 0x7a, 0x0d, 0xcb, 0x28, 0x24, 0x57, 0x57, 0xb7, 0x9e, 0xb4, 0x66, 0xe3,
	0x65, 0x14, 0xf2, 0x37, 0xb0, 0x4a, 0xc2, 0x93, 0xbf, 0x3c, 0xac, 0xa8, 0x63, 0x93, 0x8c, 0x0d,
	0x77, 0xfb, 0x8b, 0xc1, 0x3a, 0x7a, 0xbc, 0x9c, 0xf9, 0x7b, 0xd8, 0xf4, 0x9b, 0xe6, 0x7b, 0x39,
	0xbb, 0xad, 0xc1, 0x8d, 0x9c, 0x5f, 0x03, 0xb1, 0x30, 0xbf, 0xf4, 0x5b, 0xe4, 0x7b, 0x39, 0xdb,
	0x7b, 0x70, 0x23, 0xe7, 0x2b, 0x16, 0x0b, 0x1e, 0x80, 0xf7, 0x09, 0x35, 0xb9, 0x75, 0x25, 0x3d,
	0x8e, 0xc0, 0x91, 0x06, 0x8a, 0xc5, 0x57, 0x97, 0x5e, 0xcd, 0x87, 0xbf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xd5, 0x62, 0x4c, 0xea, 0x46, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PingClient is the client API for Ping service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PingClient interface {
	CreateVM(ctx context.Context, in *CreateVMRequest, opts ...grpc.CallOption) (*CreateVMResponse, error)
	DeleteVM(ctx context.Context, in *DeleteVMRequest, opts ...grpc.CallOption) (*DeleteVMResponse, error)
	GetStat(ctx context.Context, in *Dummy, opts ...grpc.CallOption) (*Stat, error)
}

type pingClient struct {
	cc *grpc.ClientConn
}

func NewPingClient(cc *grpc.ClientConn) PingClient {
	return &pingClient{cc}
}

func (c *pingClient) CreateVM(ctx context.Context, in *CreateVMRequest, opts ...grpc.CallOption) (*CreateVMResponse, error) {
	out := new(CreateVMResponse)
	err := c.cc.Invoke(ctx, "/Ping/CreateVM", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pingClient) DeleteVM(ctx context.Context, in *DeleteVMRequest, opts ...grpc.CallOption) (*DeleteVMResponse, error) {
	out := new(DeleteVMResponse)
	err := c.cc.Invoke(ctx, "/Ping/DeleteVM", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pingClient) GetStat(ctx context.Context, in *Dummy, opts ...grpc.CallOption) (*Stat, error) {
	out := new(Stat)
	err := c.cc.Invoke(ctx, "/Ping/GetStat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PingServer is the server API for Ping service.
type PingServer interface {
	CreateVM(context.Context, *CreateVMRequest) (*CreateVMResponse, error)
	DeleteVM(context.Context, *DeleteVMRequest) (*DeleteVMResponse, error)
	GetStat(context.Context, *Dummy) (*Stat, error)
}

// UnimplementedPingServer can be embedded to have forward compatible implementations.
type UnimplementedPingServer struct {
}

func (*UnimplementedPingServer) CreateVM(ctx context.Context, req *CreateVMRequest) (*CreateVMResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVM not implemented")
}
func (*UnimplementedPingServer) DeleteVM(ctx context.Context, req *DeleteVMRequest) (*DeleteVMResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVM not implemented")
}
func (*UnimplementedPingServer) GetStat(ctx context.Context, req *Dummy) (*Stat, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStat not implemented")
}

func RegisterPingServer(s *grpc.Server, srv PingServer) {
	s.RegisterService(&_Ping_serviceDesc, srv)
}

func _Ping_CreateVM_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVMRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingServer).CreateVM(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Ping/CreateVM",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingServer).CreateVM(ctx, req.(*CreateVMRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ping_DeleteVM_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVMRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingServer).DeleteVM(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Ping/DeleteVM",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingServer).DeleteVM(ctx, req.(*DeleteVMRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ping_GetStat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Dummy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingServer).GetStat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Ping/GetStat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingServer).GetStat(ctx, req.(*Dummy))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ping_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Ping",
	HandlerType: (*PingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVM",
			Handler:    _Ping_CreateVM_Handler,
		},
		{
			MethodName: "DeleteVM",
			Handler:    _Ping_DeleteVM_Handler,
		},
		{
			MethodName: "GetStat",
			Handler:    _Ping_GetStat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "napolet.proto",
}
